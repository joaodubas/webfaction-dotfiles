#!/usr/bin/env bash
# environment variables
bindir=$HOME/local/bin
if [[ ":$PATH:" != *":$bindir:"* ]]; then
    PATH=$bindir:$PATH
    export PATH
fi
LD_LIBRARY_PATH=$HOME/local/lib
LIBRAY_PATH=$LD_LIBRARY_PATH
C_INCLUDE_PATH=$LD_LIBRARY_PATH
CPLUS_INCLUDE_PATH=$LD_LIBRARY_PATH
export LD_LIBRARY_PATH
export LIBRARY_PATH
export C_INCLUDE_PATH
export CPLUS_INCLUDE_PATH

# local development
export PROJECTS=$HOME/public

# virtualenv
if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
	export WORKON_HOME=$HOME/.venv
	export PROJECT_HOME=$HOME/public
	. /usr/local/bin/virtualenvwrapper.sh
fi

# golang
export GOROOT=$HOME/local/src/go
export GOPATH=$HOME/local/go
export GOBIN=$GOPATH/bin
if [[ ":$PATH:" != *":$GOBIN:"* ]]; then
	PATH=$GOBIN:$PATH
	export PATH
fi

# aliases
startmux() {
    tmux new -s dev
}

docker-install() {
    local repo=$(cat REPOSITORY)
    local tag=$(cat TAG)
    local image=${repo}:${tag}

    docker build --force-rm --pull --tag ${image} .
    docker tag --force ${image} ${repo}:latest
}

fig () {
	docker run -i -t --rm \
		-v ${PWD}:${PWD} \
		-v /var/run/docker.sock:/var/run/docker.sock \
		-w ${PWD} \
		joaodubas/fig:latest \
			$@
}

docker-backup () {
	docker run -i -t --rm \
		-v ${HOME}/bkp:/bkp \
		-v /var/run/docker.sock:/docker.sock \
		-v /var/lib/docker/vfs/dir:/var/lib/docker/vfs/dir \
		--workdir /bkp \
		fish/docker-backup \
			-addr /docker.sock \
			$@
}

# Personal hook configurations
if [ -f ~/.localrc ]; then
    . ~/.localrc
fi
